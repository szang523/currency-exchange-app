{"ast":null,"code":"var _jsxFileName = \"/Users/sierrazang/Documents/Altcademy/ReactJS/currency-exchange-app/src/CurrencyConverter.js\";\nimport React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getRate = (base, quote) => {\n      this.setState({\n        loading: true\n      });\n      fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}&to=${quote}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rate = data.rates[quote];\n        this.setState({\n          rate,\n          baseValue: 1,\n          quoteValue: Number((1 * rate).toFixed(2)),\n          loading: false\n        });\n      }).catch(error => console.error(error.message));\n    };\n\n    this.getHistoricalRates = (base, quote) => {\n      const endDate = new Date().toISOString().split('T')[0];\n      const startDate = new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n      fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${base}&to=${quote}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const chartLabels = Object.keys(data.rates);\n        const chartData = Object.values(data.rates).map(rate => rate[quote]);\n        const chartLabel = `${base}/${quote}`;\n        this.buildChart(chartLabels, chartData, chartLabel);\n      }).catch(error => console.error(error.message));\n    };\n\n    this.buildChart = (labels, data, label) => {\n      const chartRef = this.chartRef.current.getContext(\"2d\");\n\n      if (typeof this.chart !== \"undefined\") {\n        this.chart.destroy();\n      }\n\n      this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [{\n            label: label,\n            data,\n            fill: false,\n            tension: 0\n          }]\n        },\n        options: {\n          responsive: true\n        }\n      });\n    };\n\n    this.changeBaseAcronym = event => {\n      const baseAcronym = event.target.value;\n      this.setState({\n        baseAcronym\n      });\n      this.getRate(baseAcronym, this.state.quoteAcronym);\n      this.getHistoricalRates(baseAcronym, this.state.quoteAcronym);\n    };\n\n    this.changeBaseValue = event => {\n      const quoteValue = this.convert(event.target.value, this.state.rate, this.toQuote);\n      this.setState({\n        baseValue: event.target.value,\n        quoteValue\n      });\n    };\n\n    this.changeQuoteAcronym = event => {\n      const quoteAcronym = event.target.value;\n      this.setState({\n        quoteAcronym\n      });\n      this.getRate(this.state.baseAcronym, quoteAcronym);\n      this.getHistoricalRates(this.state.baseAcronym, quoteAcronym);\n    };\n\n    this.changeQuoteValue = event => {\n      const baseValue = this.convert(event.target.value, this.state.rate, this.toBase);\n      this.setState({\n        quoteValue: event.target.value,\n        baseValue\n      });\n    };\n\n    const params = new URLSearchParams(props.location);\n    this.state = {\n      rate: 0,\n      baseAcronym: params.get('base') || 'USD',\n      baseValue: 0,\n      quoteAcronym: params.get('quote') || 'JPY',\n      quoteValue: 0,\n      loading: false\n    };\n    this.chartRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      baseAcronym,\n      quoteAcronym\n    } = this.state;\n    this.getRate(baseAcronym, quoteAcronym);\n    this.getHistoricalRates(baseAcronym, quoteAcronym);\n  }\n\n  toBase(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  toQuote(amount, rate) {\n    return amount * rate;\n  }\n\n  convert(amount, rate, equation) {\n    const input = parseFloat(amount);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    return equation(input, rate).toFixed(2);\n  }\n\n  render() {\n    const {\n      rate,\n      baseAcronym,\n      baseValue,\n      quoteAcronym,\n      quoteValue,\n      loading\n    } = this.state;\n    const currencyOptions = Object.keys(currencies).map(currencyAcronym => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: currencyAcronym,\n      children: currencyAcronym\n    }, currencyAcronym, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 76\n    }, this));\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-3 bg-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-2\",\n          children: \"Currency Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"1 \", baseAcronym, \" to 1 \", quoteAcronym, \" = \", rate.toFixed(2), \" \", currencies[quoteAcronym].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-row p-3 mb-4 bg-light justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-0 px-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: baseAcronym,\n            onChange: this.changeBaseAcronym,\n            className: \"form-control form-control-lg mb-2\",\n            disabled: loading,\n            children: currencyOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-prepend\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-text\",\n                children: currencies[baseAcronym].symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"base\",\n              className: \"form-control\",\n              value: baseValue,\n              onChange: this.changeBaseValue,\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-secondary\",\n            children: currencies[baseAcronym].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-3 d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-0 px-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: quoteAcronym,\n            onChange: this.changeQuoteAcronym,\n            className: \"form-control mb-2\",\n            disabled: loading,\n            children: currencyOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-prepend\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-text\",\n                children: currencies[quoteAcronym].symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"quote\",\n              className: \"form-control\",\n              value: quoteValue,\n              onChange: this.changeQuoteValue,\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-secondary\",\n            children: currencies[quoteAcronym].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: this.chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/sierrazang/Documents/Altcademy/ReactJS/currency-exchange-app/src/CurrencyConverter.js"],"names":["React","currencies","checkStatus","json","Chart","CurrencyConverter","Component","constructor","props","getRate","base","quote","setState","loading","fetch","then","data","error","Error","rate","rates","baseValue","quoteValue","Number","toFixed","catch","console","message","getHistoricalRates","endDate","Date","toISOString","split","startDate","getTime","chartLabels","Object","keys","chartData","values","map","chartLabel","buildChart","labels","label","chartRef","current","getContext","chart","destroy","type","datasets","fill","tension","options","responsive","changeBaseAcronym","event","baseAcronym","target","value","state","quoteAcronym","changeBaseValue","convert","toQuote","changeQuoteAcronym","changeQuoteValue","toBase","params","URLSearchParams","location","get","createRef","componentDidMount","amount","equation","input","parseFloat","isNaN","render","currencyOptions","currencyAcronym","name","symbol"],"mappings":"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","sourcesContent":["import React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport Chart from 'chart.js/auto';\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const params = new URLSearchParams(props.location);\n\n    this.state = {\n      rate: 0,\n      baseAcronym: params.get('base') || 'USD',\n      baseValue: 0,\n      quoteAcronym: params.get('quote') || 'JPY',\n      quoteValue: 0,\n      loading: false,\n    };\n\n     this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { baseAcronym, quoteAcronym } = this.state;\n    this.getRate(baseAcronym, quoteAcronym);\n    this.getHistoricalRates(baseAcronym, quoteAcronym);\n  }\n\n  getRate = (base, quote) => {\n    this.setState({ loading: true });\n    fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}&to=${quote}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rate = data.rates[quote];\n\n        this.setState({\n          rate,\n          baseValue: 1,\n          quoteValue: Number((1 * rate).toFixed(2)),\n          loading: false,\n        });\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  getHistoricalRates = (base, quote) => {\n    const endDate = new Date().toISOString().split('T')[0];\n    const startDate = new Date((new Date()).getTime() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0];\n\n    fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${base}&to=${quote}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const chartLabels = Object.keys(data.rates);\n        const chartData = Object.values(data.rates).map(rate => rate[quote]);\n        const chartLabel = `${base}/${quote}`;\n        this.buildChart(chartLabels, chartData, chartLabel);\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  buildChart = (labels, data, label) => {\n    const chartRef = this.chartRef.current.getContext(\"2d\");\n\n    if (typeof this.chart !== \"undefined\") {\n      this.chart.destroy();\n    }\n\n    this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [\n          {\n            label: label,\n            data,\n            fill: false,\n            tension: 0,\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n      }\n    })\n  }\n\n  toBase(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  toQuote(amount, rate) {\n    return amount * rate;\n  }\n\n  convert(amount, rate, equation) {\n    const input = parseFloat(amount);\n    if (Number.isNaN(input)) {\n      return '';\n    }\n    return equation(input, rate).toFixed(2);\n  }\n\n  changeBaseAcronym = (event) => {\n    const baseAcronym = event.target.value;\n    this.setState({ baseAcronym });\n    this.getRate(baseAcronym, this.state.quoteAcronym);\n    this.getHistoricalRates(baseAcronym, this.state.quoteAcronym);\n  }\n\n  changeBaseValue = (event) => {\n    const quoteValue = this.convert(event.target.value, this.state.rate, this.toQuote);\n    this.setState({\n      baseValue: event.target.value,\n      quoteValue,\n    });\n  }\n\n  changeQuoteAcronym = (event) => {\n    const quoteAcronym = event.target.value;\n    this.setState({ quoteAcronym });\n    this.getRate(this.state.baseAcronym, quoteAcronym);\n    this.getHistoricalRates(this.state.baseAcronym, quoteAcronym);\n  }\n\n  changeQuoteValue = (event) => {\n    const baseValue = this.convert(event.target.value, this.state.rate, this.toBase);\n    this.setState({\n      quoteValue: event.target.value,\n      baseValue,\n    });\n  }\n\n  render() {\n    const { rate, baseAcronym, baseValue, quoteAcronym, quoteValue, loading } = this.state;\n\n    const currencyOptions = Object.keys(currencies).map(currencyAcronym => <option key={currencyAcronym} value={currencyAcronym}>{currencyAcronym}</option>);\n\n    return (\n      <React.Fragment>\n        <div className=\"text-center p-3 bg-light\">\n          <h2 className=\"mb-2\">Currency Converter</h2>\n          <h4>1 {baseAcronym} to 1 {quoteAcronym} = {rate.toFixed(2)} {currencies[quoteAcronym].name}</h4>\n        </div>\n        <form className=\"form-row p-3 mb-4 bg-light justify-content-center\">\n          <div className=\"form-group mb-0 px-5\">\n            <select value={baseAcronym} onChange={this.changeBaseAcronym} className=\"form-control form-control-lg mb-2\" disabled={loading}>\n              {currencyOptions}\n            </select>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{currencies[baseAcronym].symbol}</div>\n              </div>\n              <input id=\"base\" className=\"form-control\" value={baseValue} onChange={this.changeBaseValue} type=\"number\" />\n            </div>\n            <small className=\"text-secondary\">{currencies[baseAcronym].name}</small>\n          </div>\n          <div className=\"py-3 d-flex justify-content-center align-items-center\">\n            <h3>=</h3>\n          </div>\n          <div className=\"form-group mb-0 px-5\">\n            <select value={quoteAcronym} onChange={this.changeQuoteAcronym} className=\"form-control mb-2\" disabled={loading}>\n              {currencyOptions}\n            </select>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{currencies[quoteAcronym].symbol}</div>\n              </div>\n              <input id=\"quote\" className=\"form-control\" value={quoteValue} onChange={this.changeQuoteValue} type=\"number\" />\n            </div>\n            <small className=\"text-secondary\">{currencies[quoteAcronym].name}</small>\n          </div>\n        </form>\n        {<canvas ref={this.chartRef} />}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CurrencyConverter"]},"metadata":{},"sourceType":"module"}