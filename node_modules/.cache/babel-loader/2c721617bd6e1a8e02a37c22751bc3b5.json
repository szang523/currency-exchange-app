{"ast":null,"code":"var _jsxFileName = \"/Users/sierrazang/Documents/Altcademy/ReactJS/currency-exchange-app/src/CurrencyConverter.js\";\nimport React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getRate = (base, quote) => {\n      this.setState({\n        loading: true\n      });\n      fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}&to=${quote}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rate = data.rates[quote];\n        this.setState({\n          rate,\n          baseValue: 1,\n          quoteValue: Number((1 * rate).toFixed(2)),\n          loading: false\n        });\n      }).catch(error => console.error(error.message));\n    };\n\n    this.changeBaseAcronym = event => {\n      const baseAcronym = event.target.value;\n      this.setState({\n        baseAcronym\n      });\n      this.getRate(baseAcronym, this.state.quoteAcronym);\n      this.getHistoricalRates(baseAcronym, this.state.quoteAcronym);\n    };\n\n    this.changeBaseValue = event => {\n      const quoteValue = this.convert(event.target.value, this.state.rate, this.toQuote);\n      this.setState({\n        baseValue: event.target.value,\n        quoteValue\n      });\n    };\n\n    this.changeQuoteAcronym = event => {\n      const quoteAcronym = event.target.value;\n      this.setState({\n        quoteAcronym\n      });\n      this.getRate(this.state.baseAcronym, quoteAcronym);\n      this.getHistoricalRates(this.state.baseAcronym, quoteAcronym);\n    };\n\n    this.changeQuoteValue = event => {\n      const baseValue = this.convert(event.target.value, this.state.rate, this.toBase);\n      this.setState({\n        quoteValue: event.target.value,\n        baseValue\n      });\n    };\n\n    const params = new URLSearchParams(props.location);\n    this.state = {\n      rate: 0,\n      baseAcronym: params.get('base') || 'USD',\n      baseValue: 0,\n      quoteAcronym: params.get('quote') || 'JPY',\n      quoteValue: 0,\n      loading: false\n    }; // this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      baseAcronym,\n      quoteAcronym\n    } = this.state;\n    this.getRate(baseAcronym, quoteAcronym); //this.getHistoricalRates(baseAcronym, quoteAcronym);\n  }\n\n  //   getHistoricalRates = (base, quote) => {\n  //     const endDate = new Date().toISOString().split('T')[0];\n  //     const startDate = new Date((new Date()).getTime() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0];\n  //     fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${base}&to=${quote}`)\n  //       .then(checkStatus)\n  //       .then(json)\n  //       .then(data => {\n  //         if (data.error) {\n  //           throw new Error(data.error);\n  //         }\n  //         const chartLabels = Object.keys(data.rates);\n  //         const chartData = Object.values(data.rates).map(rate => rate[quote]);\n  //         const chartLabel = `${base}/${quote}`;\n  //         this.buildChart(chartLabels, chartData, chartLabel);\n  //       })\n  //       .catch(error => console.error(error.message));\n  //   }\n  //   buildChart = (labels, data, label) => {\n  //     const chartRef = this.chartRef.current.getContext(\"2d\");\n  //     if (typeof this.chart !== \"undefined\") {\n  //       this.chart.destroy();\n  //     }\n  //     this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n  //       type: 'line',\n  //       data: {\n  //         labels,\n  //         datasets: [\n  //           {\n  //             label: label,\n  //             data,\n  //             fill: false,\n  //             tension: 0,\n  //           }\n  //         ]\n  //       },\n  //       options: {\n  //         responsive: true,\n  //       }\n  //     })\n  //   }\n  toBase(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  toQuote(amount, rate) {\n    return amount * rate;\n  }\n\n  convert(amount, rate, equation) {\n    const input = parseFloat(amount);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    return equation(input, rate).toFixed(2);\n  }\n\n  render() {\n    const {\n      rate,\n      baseAcronym,\n      baseValue,\n      quoteAcronym,\n      quoteValue,\n      loading\n    } = this.state;\n    const currencyOptions = Object.keys(currencies).map(currencyAcronym => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: currencyAcronym,\n      children: currencyAcronym\n    }, currencyAcronym, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 76\n    }, this));\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-2\",\n            children: \"Currency Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"1 \", baseAcronym, \" to 1 \", quoteAcronym, \" = \", rate.toFixed(2), \" \", currencies[quoteAcronym].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-row p-3 mb-4 bg-light justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-0 px-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: baseAcronym,\n              onChange: this.changeBaseAcronym,\n              className: \"form-control form-control-lg mb-2\",\n              disabled: loading,\n              children: currencyOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group-text\",\n                  children: currencies[baseAcronym].symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"base\",\n                className: \"form-control\",\n                value: baseValue,\n                onChange: this.changeBaseValue,\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              children: currencies[baseAcronym].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"py-3 d-flex justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"=\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-0 px-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: quoteAcronym,\n              onChange: this.changeQuoteAcronym,\n              className: \"form-control mb-2\",\n              disabled: loading,\n              children: currencyOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group-text\",\n                  children: currencies[quoteAcronym].symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"quote\",\n                className: \"form-control\",\n                value: quoteValue,\n                onChange: this.changeQuoteValue,\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              children: currencies[quoteAcronym].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/sierrazang/Documents/Altcademy/ReactJS/currency-exchange-app/src/CurrencyConverter.js"],"names":["React","currencies","checkStatus","json","CurrencyConverter","Component","constructor","props","getRate","base","quote","setState","loading","fetch","then","data","error","Error","rate","rates","baseValue","quoteValue","Number","toFixed","catch","console","message","changeBaseAcronym","event","baseAcronym","target","value","state","quoteAcronym","getHistoricalRates","changeBaseValue","convert","toQuote","changeQuoteAcronym","changeQuoteValue","toBase","params","URLSearchParams","location","get","componentDidMount","amount","equation","input","parseFloat","isNaN","render","currencyOptions","Object","keys","map","currencyAcronym","name","symbol"],"mappings":"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","sourcesContent":["import React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const params = new URLSearchParams(props.location);\n\n    this.state = {\n      rate: 0,\n      baseAcronym: params.get('base') || 'USD',\n      baseValue: 0,\n      quoteAcronym: params.get('quote') || 'JPY',\n      quoteValue: 0,\n      loading: false,\n    };\n\n    // this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { baseAcronym, quoteAcronym } = this.state;\n    this.getRate(baseAcronym, quoteAcronym);\n    //this.getHistoricalRates(baseAcronym, quoteAcronym);\n  }\n\n  getRate = (base, quote) => {\n    this.setState({ loading: true });\n    fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}&to=${quote}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rate = data.rates[quote];\n\n        this.setState({\n          rate,\n          baseValue: 1,\n          quoteValue: Number((1 * rate).toFixed(2)),\n          loading: false,\n        });\n      })\n      .catch(error => console.error(error.message));\n  }\n\n//   getHistoricalRates = (base, quote) => {\n//     const endDate = new Date().toISOString().split('T')[0];\n//     const startDate = new Date((new Date()).getTime() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0];\n\n//     fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${base}&to=${quote}`)\n//       .then(checkStatus)\n//       .then(json)\n//       .then(data => {\n//         if (data.error) {\n//           throw new Error(data.error);\n//         }\n\n//         const chartLabels = Object.keys(data.rates);\n//         const chartData = Object.values(data.rates).map(rate => rate[quote]);\n//         const chartLabel = `${base}/${quote}`;\n//         this.buildChart(chartLabels, chartData, chartLabel);\n//       })\n//       .catch(error => console.error(error.message));\n//   }\n\n//   buildChart = (labels, data, label) => {\n//     const chartRef = this.chartRef.current.getContext(\"2d\");\n\n//     if (typeof this.chart !== \"undefined\") {\n//       this.chart.destroy();\n//     }\n\n//     this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n//       type: 'line',\n//       data: {\n//         labels,\n//         datasets: [\n//           {\n//             label: label,\n//             data,\n//             fill: false,\n//             tension: 0,\n//           }\n//         ]\n//       },\n//       options: {\n//         responsive: true,\n//       }\n//     })\n//   }\n\n  toBase(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  toQuote(amount, rate) {\n    return amount * rate;\n  }\n\n  convert(amount, rate, equation) {\n    const input = parseFloat(amount);\n    if (Number.isNaN(input)) {\n      return '';\n    }\n    return equation(input, rate).toFixed(2);\n  }\n\n  changeBaseAcronym = (event) => {\n    const baseAcronym = event.target.value;\n    this.setState({ baseAcronym });\n    this.getRate(baseAcronym, this.state.quoteAcronym);\n    this.getHistoricalRates(baseAcronym, this.state.quoteAcronym);\n  }\n\n  changeBaseValue = (event) => {\n    const quoteValue = this.convert(event.target.value, this.state.rate, this.toQuote);\n    this.setState({\n      baseValue: event.target.value,\n      quoteValue,\n    });\n  }\n\n  changeQuoteAcronym = (event) => {\n    const quoteAcronym = event.target.value;\n    this.setState({ quoteAcronym });\n    this.getRate(this.state.baseAcronym, quoteAcronym);\n    this.getHistoricalRates(this.state.baseAcronym, quoteAcronym);\n  }\n\n  changeQuoteValue = (event) => {\n    const baseValue = this.convert(event.target.value, this.state.rate, this.toBase);\n    this.setState({\n      quoteValue: event.target.value,\n      baseValue,\n    });\n  }\n\n  render() {\n    const { rate, baseAcronym, baseValue, quoteAcronym, quoteValue, loading } = this.state;\n\n    const currencyOptions = Object.keys(currencies).map(currencyAcronym => <option key={currencyAcronym} value={currencyAcronym}>{currencyAcronym}</option>);\n\n    return (\n      <React.Fragment>\n        <div className=\"\">\n        <div className=\"text-center p-3\">\n          <h2 className=\"mb-2\">Currency Converter</h2>\n          <h4>1 {baseAcronym} to 1 {quoteAcronym} = {rate.toFixed(2)} {currencies[quoteAcronym].name}</h4>\n        </div>\n        <form className=\"form-row p-3 mb-4 bg-light justify-content-center\">\n          <div className=\"form-group mb-0 px-5\">\n            <select value={baseAcronym} onChange={this.changeBaseAcronym} className=\"form-control form-control-lg mb-2\" disabled={loading}>\n              {currencyOptions}\n            </select>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{currencies[baseAcronym].symbol}</div>\n              </div>\n              <input id=\"base\" className=\"form-control\" value={baseValue} onChange={this.changeBaseValue} type=\"number\" />\n            </div>\n            <small className=\"text-secondary\">{currencies[baseAcronym].name}</small>\n          </div>\n          <div className=\"py-3 d-flex justify-content-center align-items-center\">\n            <h3>=</h3>\n          </div>\n          <div className=\"form-group mb-0 px-5\">\n            <select value={quoteAcronym} onChange={this.changeQuoteAcronym} className=\"form-control mb-2\" disabled={loading}>\n              {currencyOptions}\n            </select>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{currencies[quoteAcronym].symbol}</div>\n              </div>\n              <input id=\"quote\" className=\"form-control\" value={quoteValue} onChange={this.changeQuoteValue} type=\"number\" />\n            </div>\n            <small className=\"text-secondary\">{currencies[quoteAcronym].name}</small>\n          </div>\n        </form>\n        </div>\n        {/* <canvas ref={this.chartRef} /> */}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CurrencyConverter"]},"metadata":{},"sourceType":"module"}