{"ast":null,"code":"var _jsxFileName = \"/Users/sierrazang/Documents/Altcademy/ReactJS/currency-exchange-app/src/home.js\";\nimport React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport CurrencyTable from './CurrencyTable';\nimport CurrencyConverter from './CurrencyConverter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.changeBase = event => {\n      this.setState({\n        base: event.target.value\n      });\n      this.getRatesData(event.target.value);\n    };\n\n    this.getRatesData = base => {\n      this.setState({\n        loading: true\n      });\n      fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rates = Object.keys(data.rates).filter(acronym => acronym !== base).map(acronym => ({\n          acronym,\n          rate: data.rates[acronym],\n          name: currencies[acronym].name,\n          symbol: currencies[acronym].symbol\n        }));\n        this.setState({\n          rates,\n          loading: false\n        });\n      }).catch(error => console.error(error.message));\n    };\n\n    this.state = {\n      base: 'USD',\n      rates: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getRatesData(this.state.base);\n  }\n\n  render() {\n    const {\n      base,\n      rates,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CurrencyConverter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"p-3 bg-light form-inline justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-2\",\n          children: [\"Base currency: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"mr-2\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: base,\n          onChange: this.changeBase,\n          className: \"form-control form-control-lg mb-2\",\n          disabled: loading,\n          children: Object.keys(currencies).map(currencyAcronym => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: currencyAcronym,\n            children: currencyAcronym\n          }, currencyAcronym, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 61\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyTable, {\n        base: base,\n        rates: rates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/sierrazang/Documents/Altcademy/ReactJS/currency-exchange-app/src/home.js"],"names":["React","currencies","checkStatus","json","CurrencyTable","CurrencyConverter","Home","Component","constructor","changeBase","event","setState","base","target","value","getRatesData","loading","fetch","then","data","error","Error","rates","Object","keys","filter","acronym","map","rate","name","symbol","catch","console","message","state","componentDidMount","render","currencyAcronym"],"mappings":"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","sourcesContent":["import React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport CurrencyTable from './CurrencyTable';\nimport CurrencyConverter from './CurrencyConverter';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      base: 'USD',\n      rates: null,\n      loading: true,\n    }\n  }\n\n  componentDidMount() {\n    this.getRatesData(this.state.base);\n  }\n\n  changeBase = (event) => {\n    this.setState({ base: event.target.value });\n    this.getRatesData(event.target.value);\n  }\n\n  getRatesData = (base) => {\n    this.setState({ loading: true });\n    fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rates = Object.keys(data.rates)\n          .filter(acronym => acronym !== base)\n          .map(acronym => ({\n            acronym,\n            rate: data.rates[acronym],\n            name: currencies[acronym].name,\n            symbol: currencies[acronym].symbol,\n          }))\n\n        this.setState({ rates, loading: false });\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  render () {\n    const { base, rates, loading } = this.state;\n\n    return (\n      <React.Fragment>\n        <CurrencyConverter/>\n        <form className=\"p-3 bg-light form-inline justify-content-center\">\n          <h3 className=\"mb-2\">Base currency: <b className=\"mr-2\">1</b></h3>\n          <select value={base} onChange={this.changeBase} className=\"form-control form-control-lg mb-2\" disabled={loading}>\n            {Object.keys(currencies).map(currencyAcronym => <option key={currencyAcronym} value={currencyAcronym}>{currencyAcronym}</option>)}\n          </select>\n        </form>\n        <CurrencyTable base={base} rates={rates} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}